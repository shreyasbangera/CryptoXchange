{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\CrytoXchange\\\\cryptoxchange\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from 'react';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport herobanner from './assets/herobanner.png';\nimport { Coins } from './utils/fetchData';\nimport axios from 'axios';\nimport Result from './components/Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [crypto, setCrypto] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [coinlist, setCoinlist] = useState([]);\n  const [currency, setCurrency] = useState([]);\n  const fetchCoins = async () => {\n    const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n    setCoinlist(res.data);\n  };\n  const fetchCurrency = async () => {\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\");\n    setCurrency(res.data);\n  };\n  useEffect(() => {\n    fetchCoins();\n  }, []);\n  useEffect(() => {\n    fetchCurrency();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"inputform\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"white\",\n            fontWeight: \"bold\",\n            alignSelf: \"center\"\n          },\n          children: \"Cryptocurrency Coverter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputfield\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"Select your preferred Crypto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Default select example\",\n            onChange: e => setCrypto(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              hidden: true,\n              children: \"Select Cryptocurrency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 7\n            }, this), coinlist && coinlist.map(_ref => {\n              let {\n                id,\n                name\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 7\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputfield\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"Select Global currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Default select example\",\n            onChange: e => setCountry(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              hidden: true,\n              children: \"Select Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 5\n            }, this), currency.map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"40%\",\n            marginTop: \"5px\"\n          },\n          variant: \"warning\",\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: herobanner,\n          alt: \"banner\",\n          className: \"herobanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        coinlist: coinlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GOXYLy76w4+2ekhxhbmWAgtaXKY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Container","Form","Button","Row","Col","herobanner","Coins","axios","Result","Home","crypto","setCrypto","country","setCountry","coinlist","setCoinlist","currency","setCurrency","fetchCoins","res","get","data","fetchCurrency","color","fontWeight","alignSelf","e","target","value","map","id","name","key","width","marginTop"],"sources":["C:/Users/shrey/CrytoXchange/cryptoxchange/src/Home.js"],"sourcesContent":["import{ React, useEffect, useState } from 'react';\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport herobanner from './assets/herobanner.png'\r\nimport { Coins } from './utils/fetchData';\r\nimport axios from 'axios'\r\nimport Result from './components/Result';\r\n\r\nconst Home = () => {\r\n  const[ crypto, setCrypto ] = useState(\"\");\r\n  const[ country, setCountry ] = useState(\"\");\r\n  const[ coinlist, setCoinlist] = useState([]);\r\n  const[ currency, setCurrency ] = useState([])\r\n\r\n\r\n  const fetchCoins = async() => {\r\n    const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n    setCoinlist(res.data)\r\n  }\r\n \r\n  const fetchCurrency = async() =>{\r\n    const res = await axios.get(\"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\")\r\n    setCurrency(res.data)\r\n\r\n  }\r\n\r\n useEffect(() => {\r\n  fetchCoins();\r\n },[]);\r\n\r\n useEffect(()=>{\r\n  fetchCurrency();\r\n },[])\r\n\r\n  return (\r\n    <Container>\r\n    <Row>\r\n    <Col className='inputform' >\r\n    <h2 style={{color: \"white\", fontWeight:\"bold\", alignSelf :\"center\"}}>Cryptocurrency Coverter</h2>\r\n    <div className='underline'></div>\r\n    <div className='inputfield'>\r\n    <p style={{color:\"white\"}}>Select your preferred Crypto</p>\r\n    <Form.Select aria-label=\"Default select example\" onChange={(e)=> setCrypto(e.target.value)}>\r\n    \r\n      <option selected disabled hidden >Select Cryptocurrency</option>\r\n      {coinlist && coinlist.map(({id,name}) => (\r\n      <option key={id}>{name}</option>\r\n    )) }\r\n  </Form.Select>\r\n  </div>\r\n  <div className='inputfield'>\r\n  <p style={{color:\"white\"}}>Select Global currency</p>\r\n  <Form.Select aria-label=\"Default select example\" onChange={(e) => setCountry(e.target.value)}>\r\n    <option selected disabled hidden >Select Currency</option>\r\n    { currency.map((key) =>(\r\n      <option value=\"1\">{key}</option>\r\n    ))\r\n    }\r\n    </Form.Select>\r\n    </div>\r\n    <Button style={{width:\"40%\", marginTop:\"5px\"}} variant=\"warning\">Convert</Button>\r\n    </Col>\r\n    <Container>\r\n    <img src={herobanner} alt=\"banner\" className='herobanner' />\r\n    </Container>\r\n    <Result coinlist ={coinlist} />\r\n    </Row>\r\n    </Container>\r\n  \r\n  \r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}